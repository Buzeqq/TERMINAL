name: terminal-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Setup Node
      uses: actions/setup-node@v3
      with: 
        node-version: 18

    - name: Setup Angular
      run: npm install -g @angular/cli

    - name: Restore .NET dependencies
      run: dotnet restore Backend/Terminal.Backend.sln

    - name: Build .NET
      run: dotnet build --no-restore Backend/Terminal.Backend.sln

    - name: Store .NET build
      uses: actions/upload-artifact@v3
      with:
        path: ./Backend
        name: terminal-backend-build
        retention-days: 7

    - name: Restore Angular dependencies
      run: npm ci
      working-directory: ./Frontend

    - name: Build Angular
      run: ng b -c production
      working-directory: ./Frontend

    - name: Store Angular build
      uses: actions/upload-artifact@v3
      with:
        path: |
          ./Frontend
          !./Frontend/node_modules
          !./Frontend/**/*.md
        name: terminal-frontend-build
        retention-days: 7

  test:
    runs-on: self-hosted
    needs: build
    
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Setup Node
      uses: actions/setup-node@v3
      with: 
        node-version: 18

    - name: Setup Angular
      run: npm install -g @angular/cli

    - name: Test .NET
      run: dotnet test --no-build --verbosity normal
      working-directory: ./Backend

#     - name: Restore Angular build
#       uses: actions/download-artifact@v3
#       with:
#         key: terminal-frontend
#
#     - name: Test Angular
#       run: ng test

    - name: Publish .NET
      run: dotnet publish ./src/Terminal.Backend.Api/Terminal.Backend.Api.csproj -c Release -o terminal-backend
      working-directory: ./Backend

    - name: Upload .NET artifacts
      uses: actions/upload-artifact@v3
      with:
        name: terminal-backend
        path: ./Backend/terminal-backend

    - name: Upload Angular artifacts
      uses: actions/upload-artifact@v3
      with:
        name: terminal-frontend
        path: ./Frontend/dist

  deploy:
    runs-on: self-hosted
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - run: docker compose -f docker-compose-prod.yml up --build -d

      - run: dotnet tool update -g docfx
      - run: docfx docfx_project/docfx.json

      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_site

