// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Terminal.Backend.Infrastructure.DAL;

#nullable disable

namespace Terminal.Backend.Infrastructure.DAL.Migrations.Users
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20241011194816_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("users")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text")
                        .HasColumnName("concurrency_stamp");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalized_name");

                    b.Property<string>("RoleType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)")
                        .HasColumnName("role_type");

                    b.HasKey("Id")
                        .HasName("pk_asp_net_roles");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", "users");

                    b.HasDiscriminator<string>("RoleType").HasValue("IdentityRole");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text")
                        .HasColumnName("claim_type");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text")
                        .HasColumnName("claim_value");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("pk_asp_net_role_claims");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_asp_net_role_claims_role_id");

                    b.ToTable("AspNetRoleClaims", "users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "UserRead",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "UserWrite",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "UserUpdate",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "UserDelete",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "ProjectRead",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "ProjectWrite",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "ProjectUpdate",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "ProjectDelete",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "ParameterRead",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "ParameterWrite",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "ParameterUpdate",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "ParameterDelete",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "ProjectRead",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "ProjectWrite",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "ProjectUpdate",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "ProjectDelete",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 17,
                            ClaimType = "TagRead",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 18,
                            ClaimType = "TagWrite",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 19,
                            ClaimType = "TagUpdate",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 20,
                            ClaimType = "TagDelete",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 21,
                            ClaimType = "RecipeRead",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 22,
                            ClaimType = "RecipeWrite",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 23,
                            ClaimType = "RecipeUpdate",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 24,
                            ClaimType = "RecipeDelete",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 25,
                            ClaimType = "SampleRead",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 26,
                            ClaimType = "SampleWrite",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 27,
                            ClaimType = "SampleUpdate",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 28,
                            ClaimType = "SampleDelete",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 29,
                            ClaimType = "StepRead",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 30,
                            ClaimType = "StepWrite",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 31,
                            ClaimType = "StepUpdate",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 32,
                            ClaimType = "StepDelete",
                            ClaimValue = "true",
                            RoleId = "f431f892-340a-491a-93a7-9822fd9aefef"
                        },
                        new
                        {
                            Id = 33,
                            ClaimType = "UserRead",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 34,
                            ClaimType = "ProjectRead",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 35,
                            ClaimType = "ProjectRead",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 36,
                            ClaimType = "ProjectRead",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 37,
                            ClaimType = "ProjectWrite",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 38,
                            ClaimType = "ProjectUpdate",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 39,
                            ClaimType = "ProjectDelete",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 40,
                            ClaimType = "RecipeRead",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 41,
                            ClaimType = "RecipeUpdate",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 42,
                            ClaimType = "RecipeUpdate",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 43,
                            ClaimType = "RecipeDelete",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 44,
                            ClaimType = "TagRead",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 45,
                            ClaimType = "TagWrite",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 46,
                            ClaimType = "TagUpdate",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 47,
                            ClaimType = "TagDelete",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 48,
                            ClaimType = "SampleRead",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 49,
                            ClaimType = "SampleWrite",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 50,
                            ClaimType = "SampleUpdate",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 51,
                            ClaimType = "SampleDelete",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 52,
                            ClaimType = "ParameterRead",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 53,
                            ClaimType = "ParameterWrite",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 54,
                            ClaimType = "ParameterUpdate",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 55,
                            ClaimType = "ParameterDelete",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 56,
                            ClaimType = "StepRead",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 57,
                            ClaimType = "StepWrite",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 58,
                            ClaimType = "StepUpdate",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 59,
                            ClaimType = "StepDelete",
                            ClaimValue = "true",
                            RoleId = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf"
                        },
                        new
                        {
                            Id = 60,
                            ClaimType = "ProjectRead",
                            ClaimValue = "true",
                            RoleId = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641"
                        },
                        new
                        {
                            Id = 61,
                            ClaimType = "RecipeRead",
                            ClaimValue = "true",
                            RoleId = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641"
                        },
                        new
                        {
                            Id = 62,
                            ClaimType = "RecipeWrite",
                            ClaimValue = "true",
                            RoleId = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641"
                        },
                        new
                        {
                            Id = 63,
                            ClaimType = "TagRead",
                            ClaimValue = "true",
                            RoleId = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641"
                        },
                        new
                        {
                            Id = 64,
                            ClaimType = "TagWrite",
                            ClaimValue = "true",
                            RoleId = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641"
                        },
                        new
                        {
                            Id = 65,
                            ClaimType = "SampleRead",
                            ClaimValue = "true",
                            RoleId = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641"
                        },
                        new
                        {
                            Id = 66,
                            ClaimType = "SampleWrite",
                            ClaimValue = "true",
                            RoleId = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641"
                        },
                        new
                        {
                            Id = 67,
                            ClaimType = "ParameterRead",
                            ClaimValue = "true",
                            RoleId = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641"
                        },
                        new
                        {
                            Id = 68,
                            ClaimType = "StepRead",
                            ClaimValue = "true",
                            RoleId = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641"
                        },
                        new
                        {
                            Id = 69,
                            ClaimType = "StepWrite",
                            ClaimValue = "true",
                            RoleId = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text")
                        .HasColumnName("claim_type");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text")
                        .HasColumnName("claim_value");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_asp_net_user_claims");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_asp_net_user_claims_user_id");

                    b.ToTable("AspNetUserClaims", "users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text")
                        .HasColumnName("login_provider");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text")
                        .HasColumnName("provider_key");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text")
                        .HasColumnName("provider_display_name");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("LoginProvider", "ProviderKey")
                        .HasName("pk_asp_net_user_logins");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_asp_net_user_logins_user_id");

                    b.ToTable("AspNetUserLogins", "users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.Property<string>("RoleId")
                        .HasColumnType("text")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_asp_net_user_roles");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_asp_net_user_roles_role_id");

                    b.ToTable("AspNetUserRoles", "users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text")
                        .HasColumnName("login_provider");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("UserId", "LoginProvider", "Name")
                        .HasName("pk_asp_net_user_tokens");

                    b.ToTable("AspNetUserTokens", "users");
                });

            modelBuilder.Entity("Terminal.Backend.Application.Common.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer")
                        .HasColumnName("access_failed_count");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text")
                        .HasColumnName("concurrency_stamp");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("email_confirmed");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("lockout_enabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lockout_end");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalized_email");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalized_user_name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("phone_number_confirmed");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text")
                        .HasColumnName("security_stamp");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("two_factor_enabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_asp_net_users");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", "users");
                });

            modelBuilder.Entity("Terminal.Backend.Application.Common.ApplicationRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.ToTable("AspNetRoles", "users");

                    b.HasDiscriminator().HasValue("ApplicationRole");

                    b.HasData(
                        new
                        {
                            Id = "f431f892-340a-491a-93a7-9822fd9aefef",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "f1c13625-7212-4e69-bdd5-daba8dd1c4bf",
                            Name = "Moderator",
                            NormalizedName = "MODERATOR"
                        },
                        new
                        {
                            Id = "fe5ab6b3-0d7f-4eef-b7cb-c17b05697641",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "e4804bf0-f521-42ab-b728-9fced1829468",
                            Name = "Guest",
                            NormalizedName = "GUEST"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_asp_net_role_claims_asp_net_roles_role_id");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Terminal.Backend.Application.Common.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_asp_net_user_claims_asp_net_users_user_id");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Terminal.Backend.Application.Common.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_asp_net_user_logins_asp_net_users_user_id");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_asp_net_user_roles_asp_net_roles_role_id");

                    b.HasOne("Terminal.Backend.Application.Common.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_asp_net_user_roles_asp_net_users_user_id");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Terminal.Backend.Application.Common.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_asp_net_user_tokens_asp_net_users_user_id");
                });
#pragma warning restore 612, 618
        }
    }
}
